[
    {
        "titolo": "Introduzione a React",
        "sotto_titolo" : null,
        "corpo" : "React è una <strong>SPA</strong> (una single page application), è molto utilizzato per fare ovviamente web app, poichè un progetto su react si sviluppa in una sola pagina. Prima di iniziare ti consiglio, se hai visual studio code, se vuoi che le estensioni che ti ho fatto installare nella home in sezione introduzione allora segui questi passaggi:\nfile --> preferenze --> setting --> apri impostazioni json ed inserisci:\n<strong>-'emmet.includeLanguages': {\n    'javascript':'html'\n}</strong> \n                    \nscarica anche l'estensione:\n<strong>- ES7+ React/Redux/React-Native snippets</strong>\n",
        "code" : null,
        "link" : null,
        "image" : null
    },

    {
        "titolo": "Installazione",
        "sotto_titolo" : null,
        "corpo" : "Per poter iniziare a programmare in React dobbiamo prima scaricare Node.js, per poterlo scaricare ti puoi recare sul loro <a href='https://nodejs.org/en/' target='_blank'>sito ufficiale</a>, io ti consiglio di scaricare la LTS, ovvero l'ultima versione disponibile di Node.",
        "code" : null,
        "link" : null,
        "image" : null
    },

    {
        "titolo": "Creazione Pagina",
        "sotto_titolo" : null,
        "corpo" : "Una volta scaricato Node.js puoi aprire il tuo prompt di comandi e digitare:\n<strong>npx create-react-app NomeCheVuoi</strong>\nquesto comando ti crereà la cartella con tutto il necessario al suo interno. Una volta aperta la cartella ci troviamo di fronte 3 cartelle, la prima sarà node-modules, come ti consiglia il nome ci saranno tutti i moduli necessari per ora, la seconda cartella sarà public, ovvero la cartella che contiene index.html della nostra pagina e infine src, la cartella che conterrà il nostro progetto, quindi cliccala e ti ritroverai di fronte a te molti file ma quelli che ci interessano sono principalmente App.js e App.css, quindi aprili. in App.js ti troverai di base una pagina d'esempio di questo genere:\n",
        "code" : null,
        "link" : null,
        "image" : "./Img/PrimaPaginaReact.png"
    },

    {
        "titolo": null,
        "sotto_titolo" : "Come funziona App.js",
        "corpo" : "Volendo potreasti cancellare tutto, e se hai installato l'estensione consigliata all'inizio, digitare <strong>rafce</strong>, in poche parole ti ricrea tutto il necessario. Ma prima di continuare vediamo che in react a differenza dell'html per fare una classe si usa className e non class, l'altra differenza e che il nostro codice che una volta lo andavamo a scrivere nel body si scrive nel return, ma perchè nel return? il return usa il linguaggio JSX (javaScript Extension) e quindi al suo interno andrà la nosta 'pagina', Mentre tra {} ci va javascipt, mentre sopra il return ci andranno le nostre funzione ecc.. Capito ciò per visualizzare il nostro progetto apriamo il prompt dei comandi e andiamo a digitare npm start, ed ecco visualizzato il nostro progetto!",
        "code" : null,
        "link" : null,
        "image" : null
    },

    {
        "titolo": "Hooks",
        "sotto_titolo" : null,
        "corpo" : "Gli Hooks ti permettono di utilizzare stati ed altre funzioni di React senza dover scrivere una classe. Gli Hooks che andremo a visionare in questa guida saranno: <strong>useState</strong>, <strong>useEffect</strong>, <strong>useRef</strong>",
        "code" : null,
        "link" : null,
        "image" : null
    },

    {
        "titolo": null,
        "sotto_titolo" : "useState",
        "corpo" : "\nUseState come ho detto prima è un Hooks che ci permette di andar aggiornare il nostro componente. Per usare questo Hooks dovremmo prima andarlo ad importare e poi digitare:\n<strong>const [Per vedere cosa c'e all'interno dello stato, Serve per modificare lo stato (è UNA FUNZIONE)] = useState('') --> memorizzo solo UN dato!(Più dati = [])\nnella quadre si andranno a mettere due parametri divisi da una virgola = useState('') se andiamo a mettere i doppi apici come scritto sopra memorizza un solo dato mentre con le [] andrà a memorizzare più dati.</strong>\n",
        "code" : ["<span class='orange'>import</span> React, <span class='orange'>{</span> useState <span class='orange'>}</span> from <span class='green'>'react'</span>\n\n<span class='orange'>const</span> App <span class='orange'>=()=>{</span>\n    <span class='orange'>const</span> <span class='purple'>[</span>MsgPera, setMsgPera<span class='purple'>]</span> <span class='orange'>=</span> useState<span class='purple'>(</span><span class='blue'>[]</span><span class='purple'>)</span>\n\n    <span class='orange'>const</span> URL <span class='orange'>=</span> <span class='green'>'https://raw.githubusercontent.com/icobasco/sample_data_files/master/pera_misure_sample.json'</span>\n\n    <span class='orange'>const</span> scarica <span class='orange'>=</span><span class='purple'>()</span><span class='orange'>=></span><span class='purple'>{</span>\n        fetch<span class='blue'>(</span>URL<span class='blue'>)</span>\n        .then<span class='blue'>(</span><span class='orange'>(</span>testo<span class='orange'>)=></span>testo.json<span class='orange'>()</span><span class='blue'>)</span>\n        .then<span class='blue'>(</span><span class='orange'>(</span>pera<span class='orange'>)=>{</span>\n            setMsgPera<span class='purple'>(</span>pera<span class='blue'>[</span><span class='purple'>0</span><span class='blue'>]</span>.data.sensor1.lowRes.humidity <span class='orange'>+</span> <span class='green'>' '</span> <span class='orange'>+</span> pera<span class='blue'>[</span><span class='purple'>0</span><span class='blue'>]</span>.data.sensor1.lowRes.temperature<span class='purple'>)</span>\n        \n        <span class='orange'>}</span><span class='blue'>)</span>\n    <span class='blue'>}</span>\n\n    <span class='orange'>return</span> <span class='purple'>(</span>\n        <span><</span>div><span class='blue'>{</span>MsgPera<span class='blue'>}</span> Prova<span class='blue'>{</span>scarica<span class='orange'>()</span><span class='blue'>}</span><span><</span><span>/</span>div>\n    <span class='purple'>)</span>\n<span class='orange'>}</span>\n"],
        "link" : null,
        "image" : null
    },

    {
        "titolo": null,
        "sotto_titolo" : "useEffect",
        "corpo" : "UseEffect come ho detto prima è un Hooks, sostanzialmente quando usi questo Hooks stai dicendo a react di eseguire la tua funzione 'effetto' dopo aver applicato i cambiamenti al DOM. Nell' esempio che andremo a vedere useremo questo useEffect per non far ripetere all'infito i nosti dati, andando nel pratico: <strong>useEffect(() => { //cosa chiamare }, [//quando chiamare(1 volta)])</strong>",
        "code" : ["<span class='orange'>import</span> React, <span class='orange'>{</span> useState, useEffect <span class='orange'>}</span> from <span class='green'>'react'</span>\n\n<span class='orange'>const</span> App <span class='orange'>=()=>{</span>\n    <span class='orange'>const</span> <span class='purple'>[</span>arrayPera, setArrayPera<span class='purple'>]</span> <span class='orange'>=</span> useState<span class='purple'>(</span><span class='blue'>[]</span><span class='purple'>)</span>\n\n    useEffect<span class='purple'>(</span><span class='blue'>()</span> <span class='orange'>=></span> <span class='blue'>{</span>\n        scarica<span class='orange'>()</span>\n    <span class='blue'>}</span>, <span class='blue'>[]</span><span class='purple'>)</span>\n\n    <span class='orange'>const</span> URL <span class='orange'>=</span> <span class='green'>'https://raw.githubusercontent.com/icobasco/sample_data_files/master/pera_misure_sample.json'</span>\n\n    <span class='orange'>const</span> scarica <span class='orange'>=</span><span class='purple'>()</span><span class='orange'>=></span><span class='purple'>{</span>\n        fetch<span class='blue'>(</span>URL<span class='blue'>)</span>\n        .then<span class='blue'>(</span><span class='orange'>(</span>testo<span class='orange'>)=></span>testo.json<span class='orange'>()</span><span class='blue'>)</span>\n        .then<span class='blue'>(</span><span class='orange'>(</span>pera<span class='orange'>)=>{</span>\n            pera.map<span class='purple'>(</span><span class='blue'>(</span>elemento, indice<span class='blue'>)</span><span class='orange'>=></span><span class='blue'>{</span>\n                setArrayPera<span class='orange'>(</span><span class='purple'>(</span>arrayPera<span class='purple'>)</span><span class='orange'>=></span><span class='purple'>[</span><span class='orange'>...</span>arrayPera, <span><</span>div><span class='blue'>{</span>elemento.data.sensor1.lowRes.humidity <span class='orange'>+</span> <span class='green'>' '</span> <span class='orange'>+</span> elemento.data.sensor1.lowRes.temperature <span class='orange'>+</span> <span class='green'>' '</span> <span class='blue'>}</span><span><</span>/div><span class='purple'>]</span><span class='orange'>)</span>\n            <span class='blue'>}</span><span class='purple'>)</span>\n        <span class='orange'>}</span><span class='blue'>)</span>\n    <span class='orange'>}</span>\n\n    <span class='orange'>return</span><span class='purple'>(</span>\n        <span><</span>div><span class='blue'>{</span>arrayPera<span class='blue'>}</span><span><</span>/div>\n    <span class='purple'>)</span>\n<span class='orange'>}</span>\n"],
        "link" : null,
        "image" : null
    },

    {
        "titolo": null,
        "sotto_titolo" : "useRef",
        "corpo" : "UseRef, come ho detto prima è un Hooks, che ci permette di andar a prendere tutti gli attributi cha ha div, ad esempio, lo useRef si usa solitamente al posto di querySelector. Dopo aver importato lo stato, la sintassi per lo useRef è questa: <strong>const nomeVar = useRef(null)</strong> da come puoi intuire nomeVar è il nome che scegli di dare al tuo Ref e imposti il valore iniziale a null e se in tal caso voui prendere il testo specifico di un div farai: <strong>nomeVar.current.textContent.</strong>",
        "code" : ["<span class='orange'>import</span> React, {useRef} <span class='orange'>from</span> 'react'\n<span class='orange'>import</span> <span class='green'>'./App.css'</span>\n\n<span class='orange'>const</span> App <span class='orange'>=()=>{</span>\n    <span class='orange'>const</span> prendiTesto <span class='orange'>=</span> useRef<span class='purple'>(</span><span class='blue'>null</span><span class='purple'>)</span>\n\n    <span class='orange'>const</span> ValoreRef <span class='orange'>=</span><span class='purple'>()</span><span class='orange'>=></span><span class='purple'>{</span>\n        console.log<span class='blue'>(</span>prendiTesto<span class='blue'>)</span>\n    <span class='purple'>}</span>\n\n    <span class='orange'>return</span><span class='purple'>(</span>\n    <span><</span>div>\n        <span><</span>div ref<span class='orange'>=</span><span class='blue'>{</span>prendiTesto<span class='blue'>}</span>>ciao testo<span><</span>/div>\n        <span><</span>button onClick<span class='orange'>=</span><span class='blue'>{</span>ValoreRef<span class='blue'>}</span>>Prendi Valore Ref<span><</span>/button>\n    <span><</span>/div>\n    <span class='purple'>)</span>\n<span class='orange'>}</span>\n\n<span class='orange'>export default</span> App\n"],
        "link" : null,
        "image" : null
    },

    {
        "titolo": "Componenti",
        "sotto_titolo" : null,
        "corpo" : "Un componente semplicemente ti permette di suddividere l'interfaccia dell'utente del tuo progetto in pezzi piccoli, così da rendere il codice più leggibile e funzionale.",
        "code" : ["<span class='orange'>import</span> <span class='green'>'./App.css'</span>\n<span class='orange'>import</span> Header <span class='orange'>from</span> <span class='green'>'./Header.js'</span>\n\n<span class='orange'>const</span> App <span class='orange'>=()=></span>\n\n    <span class='orange'>return</span> <span class='purple'>(</span>\n    <span><</span>div>\n        <span class='green'><</span><span class='green'>Header/></span>\n    <span><</span>/div>\n    <span class='purple'>)</span>\n<span class='orange'>}</span>\n\n<span class='orange'>export default</span> App\n", "<span class='orange'>import</span> React <span class='orange'>from</span> <span class='green'>'react'</span>\n<span class='orange'>import</span> <span class='green'>'./Header.css'</span>\n\n<span class='orange'>const</span> Header <span class='orange'>=()=>{</span>\n    \n    <span class='orange'>return</span> (\n        <span><</span>div className<span class='orange'>=</span><span class='green'>'header'</span>>\n            <span><</span>div>\n                <span><</span>img width<span class='orange'>=</span><span class='green'>'200'</span> src<span class='orange'>=</span><span class='green'>'./YourSrc'</span>/>\n            <span><</span>/div>\n            <span><</span>div className<span class='orange'>=</span><span class='green'>'link'</span>>\n                <span><</span>div> elem1 <span><</span>/div>\n                <span><</span>div> elem2 <span><</span>/div>\n                <span><</span>div> elem3 <span><</span>/div>\n                <span><</span>div> elem4 <span><</span>/div>\n            <span><</span>/div>\n        <span><</span>/div>\n    )\n}\n\n<span class='orange'>export default</span> Header\n"],
        "link" : null,
        "image" : null
    },

    {
        "titolo": null,
        "sotto_titolo" : "Passaggio di parametri",
        "corpo" : "Tra le componenti possiamo passare dei parametri, Tutto ciò è possibile grazie ai props(ovvero quando React incontra un elemento che rappresenta un componente definito dall'utente, passa gli attributi JSX ed i figli a questo componente come un singolo oggetto)",
        "code" : ["<span class='orange'>import</span> <span class='green'>'./App.css'</span>\n<span class='orange'>import</span> Header <span class='orange'>from</span> <span class='green'>'./Header.js'</span>\n\n<span class='orange'>const</span> App <span class='orange'>=()=></span>\n\n    <span class='orange'>return</span> <span class='purple'>(</span>\n    <span><</span>div>\n        <span class='green'><</span><span class='green'>Header/></span>\n    <span><</span>/div>\n    <span class='purple'>)</span>\n<span class='orange'>}</span>\n\n<span class='orange'>export default</span> App\n", "<span class='orange'>import</span> React <span class='orange'>from</span> <span class='green'>'react'</span>\n<span class='orange'>import</span> <span class='green'>'./Header.css'</span>\n\n<span class='orange'>const</span> Header <span class='orange'>=(</span>props<span class='orange'>)=>{</span>\n    \n    <span class='orange'>return</span> (\n        <span><</span>div className<span class='orange'>=</span><span class='green'>'header'</span>>\n            <span><</span>div>\n                <span><</span>img width<span class='orange'>=</span><span class='green'>'200'</span> src<span class='orange'>=</span><span class='blue'>{</span>props.valori.pathlogo<span class='blue'>}</span>/>\n            <span><</span>/div>\n            <span><</span>div className<span class='orange'>=</span><span class='green'>'link'</span>>\n                <span><</span>div> <span><</span>a href<span class='orange'>=</span><span class='blue'>{</span>props.valori.link1.url<span class='blue'>}</span>> <span class='blue'>{</span>props.valori.link1.anchor<span class='blue'>}</span> <span><</span>/a> <span><</span>/div>\n                <span><</span>div> <span><</span>a href<span class='orange'>=</span><span class='blue'>{</span>props.valori.link2.url<span class='blue'>}</span>> <span class='blue'>{</span>props.valori.link2.anchor<span class='blue'>}</span> <span><</span>/a> <span><</span>/div>\n                <span><</span>div> <span><</span>a href<span class='orange'>=</span><span class='blue'>{</span>props.valori.link3.url<span class='blue'>}</span>> <span class='blue'>{</span>props.valori.link3.anchor<span class='blue'>}</span> <span><</span>/a> <span><</span>/div>\n                <span><</span>div> <span><</span>a href<span class='orange'>=</span><span class='blue'>{</span>props.valori.link4.url<span class='blue'>}</span>> <span class='blue'>{</span>props.valori.link4.anchor<span class='blue'>}</span> <span><</span>/a> <span><</span>/div>\n            <span><</span>/div>\n        <span><</span>/div>\n    )\n}\n\n<span class='orange'>export default</span> Header\n"],
        "link" : null,
        "image" : null
    },

    {
        "titolo": "Bootstrap",
        "sotto_titolo" : null,
        "corpo" : "Bootstrap è una libreria che ci permette di rendere i nostri siti responsive. In react si può pure usare questa libreria, ci sono due metodi in cui possiamo usare bootstrap su react e sono, uno con i moduli e l'altro con i cdn che abbiamo sempre usato.",
        "code" : null,
        "link": ["<span><</span>link rel='stylesheet' href='https://cdn.jsdelivr.net/npm/bootstrap@4.0.0/dist/css/bootstrap.min.css' integrity='sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm' crossorigin='anonymous'>\n", "<span><</span>script src='https://code.jquery.com/jquery-3.2.1.slim.min.js' integrity='sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN' crossorigin='anonymous'><span><</span>/script>\n<span><</span>script src='https://cdn.jsdelivr.net/npm/popper.js@1.12.9/dist/umd/popper.min.js' integrity='sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q' crossorigin='anonymous'><span><</span>/script>\n<span><</span>script src='https://cdn.jsdelivr.net/npm/bootstrap@4.0.0/dist/js/bootstrap.min.js' integrity='sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl' crossorigin='anonymous'><span><</span>/script>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp\n"],
        "image" : null
    },

    {
        "titolo": null,
        "sotto_titolo" : "Dove mettere i CDN",
        "corpo" : "Per applicare bootstrap con i cdn dobbiamo andare nella cartella public e poi una volta aperta essa cerchiamo il file index.html, una volta fatto ciò metti il link del css nel head e nel body vai a mettere i tre script.",
        "code" : null,
        "link" : null,
        "image" : "./Img/BootstrapCdn.png"
    },

    {
        "titolo": null,
        "sotto_titolo" : "Bootstrap x Moduli",
        "corpo" : "Prima di applicare Bootstrap con i moduli è giusto che tu sappia che tutte le funzioni di bootstrap che usavamo utilizzando i CDN, ovvero <strong><span><</span>div className='col-xl-2'>prova<span></</span>div></strong>, con i moduli lo andremo a scrivere: <strong><span><</span>Col xl={2}>prova<span></</span>Col></strong> ed inoltre ogni elemento che andiamo ad usare dovremmo importarlo.",
        "code" : null,
        "link" : null,
        "image" : null
    },

    {
        "titolo": null,
        "sotto_titolo" : "Come scaricare il modulo",
        "corpo" : "Per scaricare il modulo di bootstrap, dobbiamo prima di tutto entrare nella cartella del progetto in questione; fatto ciò aprite il prompt di comandi e digitate:  npm install react-bootstrap bootstrap una volta scaricato il modulo accertiamoci che nella cartella node-modules ci sia: <strong>react-bootstrap</strong>",
        "code" : ["<span class='orange'>import</span> <span class='green'>'bootstrap/dist/css/bootstrap.min.css'</span>;  \n<span class='orange'>import</span> <span class='orange'>{</span>Container , Row, Col, Nav, Navbar<span class='orange'>}</span> <span class='orange'>from</span> <span class='green'>'react-bootstrap'</span>\n<span class='orange'>import</span> React <span class='orange'>from</span> <span class='green'>'react'</span>\n<span class='orange'>import</span> <span class='green'>'./App.css'</span>\n\n<span class='orange'>const</span> App <span class='orange'>=()=>{</span>\n    \n    <span class='orange'>return</span> <span class='purple'>(</span>\n        <<span class='green'>Container</span> fluid>\n\n            <<span class='green'>Row</span> className<span class='orange'>=</span><span class='green'>'justify-content-center bg-dark'</span>>\n                <<span class='green'>Col</span> xl<span class='orange'>=</span><span class='blue'>{</span>2<span class='blue'>}</span> lg<span class='orange'>=</span><span class='blue'>{</span>2<span class='blue'>}</span> md<span class='orange'>=</span><span class='blue'>{</span>3<span class='blue'>}</span> className<span class='orange'>=</span><span class='green'>'d-none d-md-block mt-2 mb-2'</span>>\n                    <span><</span>img width<span class='orange'>=</span><span class='green'>'60'</span> src<span class='orange'>=</span><span class='green'>'./TuaImage'</span>/>\n                <span><</span>/<span class='green'>Col</span>>\n                <<span class='green'>Col</span> xl<span class='orange'>=</span><span class='blue'>{</span>10<span class='blue'>}</span> lg<span class='orange'>=</span><span class='blue'>{</span>10<span class='blue'>}</span> md<span class='orange'>=</span><span class='blue'>{</span>9<span class='blue'>}</span> className<span class='orange'>=</span><span class='green'>'d-flex justify-content-between align-items-center'</span>>\n                    <span><</span>div className<span class='orange'>=</span><span class='green'>'d-none d-md-block'</span>> elem <span><</span>/div>\n                    <span><</span>div className<span class='orange'>=</span><span class='green'>'d-none d-md-block'</span>> elem <span><</span>/div>\n                    <span><</span>div className<span class='orange'>=</span><span class='green'>'d-none d-md-block'</span>> elem <span><</span>/div>\n                    <span><</span>div className<span class='orange'>=</span><span class='green'>'d-none d-md-block'</span>> elem <span><</span>/div>\n                <span><</span>/<span class='green'>Col</span>>\n\n                <<span class='green'>Navbar</span> collapseOnSelect expand<span class='orange'>=</span><span class='green'>'lg'</span> bg<span class='orange'>=</span><span class='green'>'dark'</span> variant<span class='orange'>=</span><span class='green'>'dark'</span> className<span class='orange'>=</span><span class='green'>'d-md-none'</span>>\n                    <<span class='green'>Navbar.Brand</span>>\n                        <span><</span>img width<span class='orange'>=</span><span class='green'>'60'</span> src<span class='orange'>=</span><span class='green'>'./TuaImage'</span>/>\n                    <span><</span>/<span class='green'>Navbar.Brand</span>>\n                    <<span class='green'>Navbar.Toggle</span> aria-controls<span class='orange'>=</span><span class='green'>'responsive-navbar-nav'</span>/>\n                    <<span class='green'>Navbar.Collapse</span> id<span class='orange'>=</span><span class='green'>'responsive-navbar-nav'</span>>\n                        <<span class='green'>Nav</span>>\n                            <<span class='green'>Nav.link</span>> elem <span><</span>/<span class='green'>Nav.link</span>>\n                            <<span class='green'>Nav.link</span>> elem <span><</span>/<span class='green'>Nav.link</span>>\n                        <span><</span>/<span class='green'>Nav</span>>\n                        <<span class='green'>Nav</span>>\n                            <<span class='green'>Nav.link</span>> elem <span><</span>/<span class='green'>Nav.link</span>>\n                            <<span class='green'>Nav.link</span>> elem <span><</span>/<span class='green'>Nav.link</span>>\n                        <span><</span>/<span class='green'>Nav</span>>\n                    <span><</span>/<span class='green'>Navbar.Collapse</span>>\n                <span><</span>/<span class='green'>Navbar</span>>\n            <span><</span>/<span class='green'>Row</span>>\n        <span><</span>/<span class='green'>Container</span>>\n    <span class='purple'>)</span>\n<span class='orange'>}</span>\n\n<span class='orange'>export default</span> App\n"],
        "link" : null,
        "image" : null
    },

    {
        "titolo": "Tipi Di Target",
        "sotto_titolo" : null,
        "corpo" : "In React, event.target si riferisce all'elemento DOM che ha scatenato l'evento. Ci sono diversi tipi di event.target in React, ecco una breve introduzione per tutti quelli che andremo a visionare in questa guida: <strong>event.target</strong>, <strong>event.currentTarget</strong>",
        "code" : null,
        "link" : null,
        "image" : null
    },

    {
        "titolo": null,
        "sotto_titolo" : "Target",
        "corpo" : "In React, event.target è una proprietà dell'oggetto evento (event) che rappresenta l'elemento del DOM che ha effettivamente scatenato l'evento. In altre parole, event.target restituisce un riferimento all'elemento HTML su cui è stato effettivamente verificato l'evento.",
        "code" : ["<span class='orange'>import</span> React <span class='orange'>from</span> 'react'\n<span class='orange'>import</span> <span class='green'>'./App.css'</span>\n\n<span class='orange'>const</span> App <span class='orange'>=()=>{</span>\n\n    <span class='orange'>const</span> evento <span class='orange'>=</span><span class='purple'>(</span>event<span class='purple'>)</span><span class='orange'>=></span><span class='purple'>{</span>\n        console.log<span class='blue'>(</span>event.target<span class='blue'>)</span>\n    <span class='purple'>}</span>\n\n    <span class='orange'>return</span><span class='purple'>(</span>\n        <span><</span>div>\n            <span><</span>div onClick<span class='orange'>=</span><span class='blue'>{</span>evento<span class='blue'>}</span>>\n                <span><</span>div>noi siamo <span><</span>/div>\n                <span><</span>div>home <span><</span>/div>\n            <span><</span>/div>\n        <span><</span>/div>\n    <span class='purple'>)</span>\n<span class='orange'>}</span>\n\n<span class='orange'>export default</span> App\n"],
        "link" : null,
        "image" : null
    },

    {
        "titolo": null,
        "sotto_titolo" : "currentTarget",
        "corpo" : "In React, event.currentTarget è una proprietà dell'oggetto evento (event) che rappresenta l'elemento su cui è stato associato l'evento. A differenza di event.target, che restituisce l'elemento che ha effettivamente scatenato l'evento, event.currentTarget restituisce sempre lo stesso elemento, indipendentemente da dove l'evento è stato scatenato all'interno di esso.",
        "code" : ["<span class='orange'>import</span> React <span class='orange'>from</span> 'react'\n    <span class='orange'>import</span> <span class='green'>'./App.css'</span>\n\n    <span class='orange'>const</span> App <span class='orange'>=()=>{</span>\n\n        <span class='orange'>const</span> evento <span class='orange'>=</span><span class='purple'>(</span>event<span class='purple'>)</span><span class='orange'>=></span><span class='purple'>{</span>\n            console.log<span class='blue'>(</span>event.currentTarget<span class='blue'>)</span>\n        <span class='purple'>}</span>\n\n        <span class='orange'>return</span><span class='purple'>(</span>\n            <span><</span>div>\n                <span><</span>div onClick<span class='orange'>=</span><span class='blue'>{</span>evento<span class='blue'>}</span>>\n                    <span><</span>div>noi siamo <span><</span>/div>\n                    <span><</span>div>home <span><</span>/div>\n                <span><</span>/div>\n            <span><</span>/div>\n        <span class='purple'>)</span>\n    <span class='orange'>}</span>\n\n    <span class='orange'>export default</span> App\n"],
        "link" : null,
        "image" : null
    }

]