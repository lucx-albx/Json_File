[
    {
        "titolo": "Cos'è XML?",
        "sotto_titolo" : null,
        "corpo" : "XML è un linguaggio che permette la rappresentazione di documenti e dati strotturati su un rapporto digitale. Xml è molto utilizzato per la memorizzazione e distribuzione di documenti digitali. Ogni documento XML inizia con un prologo, che contiene un XML declaraion.",
        "code" : ["<span class='light-blue'><</span><span class='light-blue'>?</span><span class='light-blue'>xml</span> <span class='light-blue'>version=</span><span class='green'>'1.0'</span> <span class='light-blue'>encoding=</span><span class='green'>'UTF-8'</span><span class='light-blue'>?></span>\n\n    <span class='light-blue'><</span><span class='light-blue'>prenotazione></span>\n        <span class='light-blue'><</span><span class='light-blue'>idVolo></span>PA321<span class='light-blue'><</span><span class='light-blue'>/idVolo></span>\n        <span class='light-blue'><</span><span class='light-blue'>idCliente></span>PP2305<span class='light-blue'><</span><span class='light-blue'>/idCliente></span>\n        <span class='light-blue'><</span><span class='light-blue'>data></span>22-10-2001<span class='light-blue'><</span><span class='light-blue'>/data></span>\n        <span class='light-blue'><</span><span class='light-blue'>prezzo valuta=<span class='green'>'EURO'</span>></span>245<span class='light-blue'><</span><span class='light-blue'>/prezzo></span>\n    <span class='light-blue'><</span><span class='light-blue'>/prenotazione></span>\n"],
        "link": null,
        "image" : null
    },

    {
        "titolo": "Fetch",
        "sotto_titolo" : null,
        "corpo" : "La fetch è possibile anche con XML. Tuttavia, a differenza del JSON, prima di ottenere i dati, sarà necessario eseguire alcuni passaggi aggiuntivi. Per effettuare una richiesta XML tramite fetch, dovrai specificare correttamente l'header Content-Type nell'oggetto delle opzioni della richiesta. Questo ti permetterà di indicare che stai inviando una richiesta XML. Dopo aver inviato la richiesta XML tramite fetch, otterrai i dati XML come risposta. Tuttavia, a differenza del JSON, che può essere facilmente parsato e utilizzato come oggetto JavaScript, i dati XML richiedono un'elaborazione aggiuntiva. Per manipolare i dati XML ottenuti, puoi utilizzare una libreria come DOMParser. Questa libreria ti permette di analizzare l'XML e accedere ai suoi elementi, attributi e contenuti. Dopo aver creato un'istanza di DOMParser, puoi utilizzarla per analizzare il testo XML ottenuto dalla risposta della fetch",
        "code" : ["<span class='orange'>const</span> url <span class='orange'>=</span> <span class='green'>'https://raw.githubusercontent.com/icobasco/sample_data_files/master/4C_catalogoFilm.xml'</span>\n\n    <span class='orange'>const</span> datiLoading <span class='orange'>=()=></span><span class='purple'>{</span>\n        fetch<span class='purple'>(</span>url<span class='purple'>)</span>\n        .then<span class='purple'>(</span><span class='blue'>(</span>catalogo<span class='blue'>)</span> <span class='orange'>=></span> catalogo.text<span class='blue'>()</span><span class='purple'>)</span>\n        .then<span class='purple'>(</span><span class='blue'>(</span>data<span class='blue'>)</span><span class='orange'>=></span><span class='blue'>{</span>\n            <span class='orange'>let</span> mioXML<span class='orange'>= new</span> DOMParser<span class='orange'>()</span>; \n            <span class='orange'>let</span> parseXML <span class='orange'>= </span> mioXML.parseFromString<span class='orange'>(</span>data,<span class='green'>'text/xml'</span><span class='orange'>)</span> \n            <span class='orange'>let</span> titoli <span class='orange'>= </span> parseXML.querySelectorAll<span class='orange'>(</span><span class='green'>'titolo'</span><span class='orange'>)</span>\n            <span class='orange'>let</span> genere <span class='orange'>= </span> parseXML.querySelectorAll<span class='orange'>(</span><span class='green'>'generi genere'</span><span class='orange'>)</span>\n            <span class='orange'>let</span> anno <span class='orange'>= </span> parseXML.querySelectorAll<span class='orange'>(</span><span class='green'>'anno'</span><span class='orange'>)</span>\n            <span class='orange'>const</span> dateTable <span class='orange'>=</span> document.querySelector<span class='orange'>(</span><span class='green'>'table tbody'</span><span class='orange'>)</span>;\n    \n            <span class='orange'>let</span> insert <span class='orange'>=</span> <span class='green'>''</span>\n            <span class='orange'>for(let</span> i <span class='orange'>=</span> 0; i < titoli.<span class='green'>length</span>; i<span class='orange'>++</span> <span class='orange'>){</span>\n                insert <span class='orange'>+=</span> <span class='green'>'<</span><span class='green'>tr>';</span>\n                insert <span class='orange'>+=</span> <span class='green'>`<</span><span class='green'>td></span></span><span class='blue'>${</span>titoli<span class='blue'>[</span>i<span class='blue'>]</span>.innerHTML<span class='blue'>}</span><span class='green'><</span><span class='green'>/td>`</span>\n                insert <span class='orange'>+=</span> <span class='green'>`<</span><span class='green'>td></span></span><span class='blue'>${</span>genere<span class='blue'>[</span>i<span class='blue'>]</span>.attributes.value.textContent<span class='blue'>}</span></td><span class='green'><</span><span class='green'>/td>`</span>\n                insert <span class='orange'>+=</span> <span class='green'>`<</span><span class='green'>td></span></span><span class='blue'>${</span>anno<span class='blue'>[</span>i<span class='blue'>]</span>.attributes.value.textContent<span class='blue'>}</span><span class='green'><</span><span class='green'>/td>`</span>\n                insert <span class='orange'>+=</span> <span class='green'>'<</span><span class='green'>tr>';</span>\n            <span class='orange'>}</span>\n            dateTable.innerHTML <span class='orange'>=</span> insert;\n        <span class='blue'>}</span><span class='purple'>)</span>\n    <span class='purple'>}</span>\n"],
        "link": null,
        "image" : null
    },

    {
        "titolo": "DTD",
        "sotto_titolo" : null,
        "corpo" : "DTD significa = Document Type Definition, Esso è un linguaggio che serve per definire la grammatica che descrive la composizione degli elementi contenuti in una certa classe di un documento XML. In pochè parole è uno strumento che serve per la validazion dei documenti XML, ed è imporate sapere che non è un linguaggio XML.",
        "code" : ["<span class='light-blue'><</span><span class='light-blue'>?</span><span class='light-blue'>xml</span> <span class='light-blue'>version=</span><span class='green'>'1.0'</span> <span class='light-blue'>encoding=</span><span class='green'>'UTF-8'</span><span class='light-blue'>?></span>\n        <span class='light-blue'><</span><span class='light-blue'>!</span><span class='orange'>DOCTYPE</span> <span class='purple'>catalogo</span> <span class='light-blue'>SYSTEM</span> <span class='light-blue'>'esempio.dtd'></span>\n        \n        <span class='light-blue'><</span><span class='light-blue'>catalogo></span>\n            <span class='light-blue'><</span><span class='light-blue'>film id=<span class='green'>'l001'</span>></span>\n                <span class='light-blue'><</span><span class='light-blue'>titolo></span>Il padrino<span class='light-blue'><</span><span class='light-blue'>/titolo></span>\n                <span class='light-blue'><</span><span class='light-blue'>generi></span>\n                    <span class='light-blue'><</span><span class='light-blue'>genere value=<span class='green'>'Drammatico'</span>/></span>\n                <span class='light-blue'><</span><span class='light-blue'>/generi></span>\n                <span class='light-blue'><</span><span class='light-blue'>attori></span>\n                    <span class='light-blue'><</span><span class='light-blue'>genere value=<span class='green'>'Michael Corleone'</span>/></span>\n                <span class='light-blue'><</span><span class='light-blue'>/attori></span>\n                <span class='light-blue'><</span><span class='light-blue'>registi></span>\n                    <span class='light-blue'><</span><span class='light-blue'>regista</span> <span class='light-blue'>nome=</span><span class='green'>'Francis Ford Coppola'</span><span class='light-blue'><</span><span class='light-blue'>/></span>\n                <span class='light-blue'><</span><span class='light-blue'>/registi></span>\n                <span class='light-blue'><</span><span class='light-blue'>originale value=<span class='green'>'SI'</span>/></span>\n                <span class='light-blue'><</span><span class='light-blue'>formato value=<span class='green'>'VHS'</span>/></span>\n                <span class='light-blue'><</span><span class='light-blue'>anno value=<span class='green'>'1972'</span>/></span>\n                <span class='light-blue'><</span><span class='light-blue'>voto value=<span class='green'>'2'</span>/></span>\n            <span class='light-blue'><</span><span class='light-blue'>/film></span>\n        ...\n        <span class='light-blue'><</span><span class='light-blue'>/catalogo></span>\n"],
        "link": null,
        "image" : null
    }
]